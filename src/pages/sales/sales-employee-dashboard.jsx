// src/sections/sales/SalesEmployeeDashboard.jsx
import { useState } from 'react';
import {
  Box,
  Grid,
  Paper,
  Avatar,
  Chip,
  Typography,
  Tabs,
  Tab,
  Container,
  alpha,
  Button,
  Divider,
  Stack,
  IconButton,
  LinearProgress,
  CardHeader, // Correct Latin 'C'
  CardContent,
  Card,
  Alert
} from '@mui/material';
import { useTheme } from '@mui/material/styles';
import { LazyMotion, domAnimation, m } from 'framer-motion';
import { useNavigate } from 'react-router-dom';

// –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –º–µ—Ç—Ä–∏–∫
import { 
  MetricCard, 
  PerformanceChart, 
} from '../../sections/metrics/components';

// –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –æ—Ç–¥–µ–ª–∞ –ø—Ä–æ–¥–∞–∂
import { 
  ClientsList,
  SalesPerformance,
  PotentialBonuses,
  DevelopmentPlan
} from '../../sections/sales/components';

export function SalesEmployeeDashboard({ 
  employeeData,
  metrics,
  activeClients,
  completedDeals,
  salesPerformance,
  improvements,
  chartData
}) {
  const theme = useTheme();
  const navigate = useNavigate();
  const [activeTab, setActiveTab] = useState(0);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
  const handleTabChange = (_, newValue) => {
    setActiveTab(newValue);
  };
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–æ–ª–∏
  const getAvatarColor = (role) => {
    const roleColors = {
      'owner': theme.palette.error.main,
      'admin': theme.palette.warning.main,
      'head': theme.palette.info.main,
      'manager': theme.palette.primary.main,
      'employee': theme.palette.success.main
    };
    return roleColors[role] || theme.palette.primary.main;
  };
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–æ–ª–∏
  const getRoleName = (role) => {
    const roles = {
      'owner': '–í–ª–∞–¥–µ–ª–µ—Ü',
      'admin': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      'head': '–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å',
      'manager': '–ú–µ–Ω–µ–¥–∂–µ—Ä',
      'employee': '–°–æ—Ç—Ä—É–¥–Ω–∏–∫'
    };
    return roles[role] || role;
  };
  
  // –î–∞–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
  const metricsData = metrics || {
    overall_performance: 70,
    overall_performance_trend: 5,
    kpi: 69,
    kpi_trend: 3,
    work_volume: 65,
    work_volume_trend: 2,
    quality: 79,
    quality_trend: -1,
    speed: 63,
    speed_trend: 0,
    plan_completion: 73,
    plan_completion_trend: 3,
    bonuses: {
      summary: {
        total_confirmed: 45000,
        total_potential: 78000,
        confirmation_rate: 58
      },
      list: []
    }
  };
  
  // –î–∞–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
  const employee = employeeData || {
    id: '12345',
    name: "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
    department: "sales",
    role: "manager",
    level: "Middle",
    progress_to_next_level: 68,
    next_level: "Senior",
    competencies: {
      product_knowledge: 82,
      sales_skills: 78,
      objection_handling: 75,
      documentation: 90
    },
    development_plan: {
      required_courses: [
        { id: 1, title: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Ä–∞–±–æ—Ç—ã —Å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è–º–∏", duration: 2, completed: false },
        { id: 2, title: "–£—Å–∫–æ—Ä–µ–Ω–∏–µ —Ü–∏–∫–ª–∞ —Å–¥–µ–ª–∫–∏", duration: 1.5, completed: false },
        { id: 3, title: "–ö—Ä–æ—Å—Å-–ø—Ä–æ–¥–∞–∂–∏ –∏ –¥–æ–ø—Ä–æ–¥–∞–∂–∏", duration: 2, completed: false }
      ],
      completed_courses: 5,
      total_courses: 12
    }
  };
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ employee –∏ employee.name –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã
  const employeeName = employee?.name || '–°–æ—Ç—Ä—É–¥–Ω–∏–∫';
  const employeeRole = employee?.role || 'employee';
  const employeeLevel = employee?.level || 'Junior';
  const employeeNextLevel = employee?.next_level || 'Middle';
  const employeeProgress = employee?.progress_to_next_level || 0;
  
  return (
    <Container maxWidth="xl">
      <LazyMotion features={domAnimation}>
        <Grid container spacing={3}>
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–µ */}
          <Grid item xs={12}>
            <Paper
              component={m.div}
              initial={{ opacity: 0, y: 10 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.3 }}
              sx={{
                p: 3,
                mb: 2,
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'space-between',
                gap: 2,
                borderRadius: 2,
                boxShadow: theme.customShadows?.z8 || '0 8px 16px 0 rgba(145, 158, 171, 0.16)',
                position: 'relative',
                overflow: 'hidden'
              }}
            >
              {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Ñ–æ–Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç */}
              <Box 
                sx={{
                  position: 'absolute',
                  top: 0,
                  right: 0,
                  width: '30%',
                  height: '100%',
                  background: `linear-gradient(135deg, ${alpha(theme.palette.primary.main, 0.05)} 0%, ${alpha(theme.palette.primary.main, 0)} 50%)`,
                  display: { xs: 'none', md: 'block' }
                }}
              />
              
              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
                <Avatar
                  sx={{
                    width: 64,
                    height: 64,
                    bgcolor: getAvatarColor(employeeRole),
                    fontSize: '1.5rem',
                    fontWeight: 'bold',
                    boxShadow: `0 0 0 4px ${alpha(getAvatarColor(employeeRole), 0.2)}`
                  }}
                >
                  {employeeName.charAt(0)}
                </Avatar>
                
                <Box>
                  <Typography variant="h4" gutterBottom fontWeight="bold">
                    {employeeName}
                  </Typography>
                  <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>
                    <Chip 
                      label="–û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂" 
                      color="primary" 
                      variant="outlined"
                      size="small"
                    />
                    <Chip 
                      label={getRoleName(employeeRole)} 
                      color="secondary" 
                      variant="outlined"
                      size="small"
                    />
                  </Box>
                </Box>
              </Box>
              
              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
                <Box sx={{ textAlign: 'right' }}>
                  <Typography variant="body2" color="text.secondary">
                    –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: 
                    <Typography component="span" fontWeight="bold" color="primary.main" sx={{ pl: 0.5 }}>
                      {employeeLevel}
                    </Typography>
                  </Typography>
                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
                    <Typography variant="body2" color="text.secondary">
                      –ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ {employeeNextLevel}:
                    </Typography>
                    <Typography variant="body2" fontWeight="bold" color="primary.main">
                      {employeeProgress}%
                    </Typography>
                  </Box>
                </Box>
                
                <Button 
                  variant="contained" 
                  color="primary"
                  onClick={() => navigate('/dashboard/sales/development')}
                >
                  –ü–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è
                </Button>
              </Box>
            </Paper>
          </Grid>
          
          {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –≤–∫–ª–∞–¥–∫–∞–º */}
          <Grid item xs={12}>
            <Paper 
              sx={{ 
                borderRadius: 2,
                boxShadow: theme.customShadows?.z8 || '0 8px 16px 0 rgba(145, 158, 171, 0.16)',
                mb: 2
              }}
            >
              <Tabs 
                value={activeTab} 
                onChange={handleTabChange}
                variant="scrollable"
                scrollButtons="auto"
                sx={{ 
                  px: 2,
                  '& .MuiTab-root': {
                    py: 2
                  }
                }}
              >
                <Tab label="–û–±–∑–æ—Ä" />
                <Tab label="–ú–æ–∏ –∫–ª–∏–µ–Ω—Ç—ã" />
                <Tab label="–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å" />
                <Tab label="–†–∞–∑–≤–∏—Ç–∏–µ" />
                <Tab label="–ë–æ–Ω—É—Å—ã" />
              </Tabs>
            </Paper>
          </Grid>
          
          {/* –í–∫–ª–∞–¥–∫–∞ "–û–±–∑–æ—Ä" */}
          {activeTab === 0 && (
            <>
              {/* –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
              <Grid item xs={12} md={4}>
                <MetricCard
                  title="–û–±—â–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
                  value={metricsData.overall_performance}
                  trend={metricsData.overall_performance_trend}
                  description="–°–æ–≤–æ–∫—É–ø–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –≤—Å–µ—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π"
                  icon="üìä"
                  bgColor={theme.palette.primary.main}
                />
              </Grid>
              
              <Grid item xs={12} md={4}>
                <MetricCard
                  title="KPI"
                  value={metricsData.kpi}
                  trend={metricsData.kpi_trend}
                  description="–ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"
                  icon="‚≠ê"
                  bgColor={theme.palette.info.main}
                />
              </Grid>
              
              <Grid item xs={12} md={4}>
                <MetricCard
                  title="–û–±—ä–µ–º —Ä–∞–±–æ—Ç—ã"
                  value={metricsData.work_volume}
                  trend={metricsData.work_volume_trend}
                  description="–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á"
                  icon="üìà"
                  bgColor={theme.palette.warning.main}
                />
              </Grid>
              
              <Grid item xs={12} md={4}>
                <MetricCard
                  title="–ö–∞—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—Ç—ã"
                  value={metricsData.quality}
                  trend={metricsData.quality_trend}
                  description="–û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã"
                  icon="‚úì"
                  bgColor={theme.palette.success.main}
                />
              </Grid>
              
              <Grid item xs={12} md={4}>
                <MetricCard
                  title="–°–∫–æ—Ä–æ—Å—Ç—å"
                  value={metricsData.speed}
                  trend={metricsData.speed_trend}
                  description="–°–∫–æ—Ä–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á"
                  icon="‚ö°"
                  bgColor={theme.palette.error.main}
                />
              </Grid>
              
              <Grid item xs={12} md={4}>
                <MetricCard
                  title="–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∞"
                  value={metricsData.plan_completion}
                  trend={metricsData.plan_completion_trend}
                  description="–ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–ª–∞–Ω–∞"
                  icon="üìÖ"
                  bgColor={theme.palette.secondary.main}
                />
              </Grid>
              
              {/* –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ */}
              <Grid item xs={12}>
                <PerformanceChart
                  data={chartData || []}
                  title="–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π"
                  subheader="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–µ—Ä–∏–æ–¥"
                  chartId="sales-employee-performance"
                />
              </Grid>
              
              {/* –ë–ª–æ–∫ "–ú–æ—è –Ω–∞–≥—Ä—É–∑–∫–∞" */}
              <Grid item xs={12} md={6}>
                <Card
                  sx={{
                    borderRadius: 2,
                    boxShadow: theme.customShadows?.z8 || '0 8px 16px 0 rgba(145, 158, 171, 0.16)',
                    height: '100%'
                  }}
                >
                  <CardHeader 
                    title="–ú–æ—è –Ω–∞–≥—Ä—É–∑–∫–∞" 
                    subheader="–¢–µ–∫—É—â–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è"
                  />
                  <Divider />
                  <CardContent>
                    <Stack spacing={3}>
                      <Box>
                        <Typography variant="h5" gutterBottom>
                          {activeClients?.length || 0}/10 –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫
                        </Typography>
                        <Typography variant="body2" color="text.secondary">
                          –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞: 8-10 —Å–¥–µ–ª–æ–∫
                        </Typography>
                        <LinearProgress 
                          variant="determinate" 
                          value={Math.min(((activeClients?.length || 0) / 10) * 100, 100)}
                          sx={{ 
                            mt: 1, 
                            height: 10, 
                            borderRadius: 5,
                            bgcolor: alpha(theme.palette.info.main, 0.15),
                            '& .MuiLinearProgress-bar': {
                              bgcolor: theme.palette.info.main
                            }
                          }}
                        />
                      </Box>
                      
                      <Box>
                        <Typography variant="body1" gutterBottom fontWeight="medium">
                          –°–ª–æ–∂–Ω–æ—Å—Ç—å —Ç–µ–∫—É—â–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤: 
                          <Typography component="span" fontWeight="bold" sx={{ pl: 0.5 }}>
                            –°—Ä–µ–¥–Ω—è—è (–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç 1.2)
                          </Typography>
                        </Typography>
                        <Typography variant="body2" color="text.secondary">
                          –í–ª–∏—è–µ—Ç –Ω–∞ —Ä–∞—Å—á–µ—Ç –±–æ–Ω—É—Å–æ–≤ –∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É
                        </Typography>
                      </Box>
                      
                      <Alert severity="info" sx={{ mt: 2 }}>
                        –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É –µ—â–µ 1-2 –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
                      </Alert>
                    </Stack>
                  </CardContent>
                </Card>
              </Grid>
              
              {/* –ë–ª–æ–∫ "–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã" */}
              <Grid item xs={12} md={6}>
                <Card
                  sx={{
                    borderRadius: 2,
                    boxShadow: theme.customShadows?.z8 || '0 8px 16px 0 rgba(145, 158, 171, 0.16)',
                    height: '100%'
                  }}
                >
                  <CardHeader 
                    title="–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã" 
                    subheader="–¢–µ–∫—É—â–∏–µ –∏ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–µ –±–æ–Ω—É—Å—ã"
                  />
                  <Divider />
                  <CardContent>
                    <Stack spacing={3}>
                      <Box>
                        <Typography variant="body1" gutterBottom fontWeight="medium">
                          –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –±–æ–Ω—É—Å—ã:
                        </Typography>
                        <Typography variant="h5" color="success.main" fontWeight="bold">
                          {metricsData.bonuses?.summary?.total_confirmed?.toLocaleString()} ‚Ç∏
                        </Typography>
                      </Box>
                      
                      <Box>
                        <Typography variant="body1" gutterBottom fontWeight="medium">
                          –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã:
                        </Typography>
                        <Typography variant="h5" color="warning.main" fontWeight="bold">
                          {metricsData.bonuses?.summary?.total_potential?.toLocaleString()} ‚Ç∏
                        </Typography>
                        <Typography variant="body2" color="text.secondary">
                          –ó–∞–≤–∏—Å—è—Ç –æ—Ç –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–µ–∫—É—â–∏—Ö —Å–¥–µ–ª–æ–∫
                        </Typography>
                      </Box>
                      
                      <Box>
                        <Typography variant="body1" gutterBottom fontWeight="medium">
                          –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–π –±–æ–Ω—É—Å –º–µ—Å—è—Ü–∞:
                        </Typography>
                        <Typography variant="h5" color="primary.main" fontWeight="bold">
                          {((metricsData.bonuses?.summary?.total_confirmed || 0) + 
                            (metricsData.bonuses?.summary?.total_potential || 0)).toLocaleString()} ‚Ç∏
                        </Typography>
                        <Typography variant="body2" color="text.secondary">
                          –ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–ª–∞–Ω–∞ –ø—Ä–æ–¥–∞–∂
                        </Typography>
                      </Box>
                    </Stack>
                  </CardContent>
                </Card>
              </Grid>
            </>
          )}
          
          {/* –í–∫–ª–∞–¥–∫–∞ "–ú–æ–∏ –∫–ª–∏–µ–Ω—Ç—ã" */}
          {activeTab === 1 && (
            <Grid item xs={12}>
              <ClientsList 
                activeClients={activeClients || []} 
                completedDeals={completedDeals || []} 
              />
            </Grid>
          )}
          
          {/* –í–∫–ª–∞–¥–∫–∞ "–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å" */}
          {activeTab === 2 && (
            <Grid item xs={12}>
              <SalesPerformance 
                salesData={salesPerformance || {}}
                improvements={improvements || []}
              />
            </Grid>
          )}
          
          {/* –í–∫–ª–∞–¥–∫–∞ "–†–∞–∑–≤–∏—Ç–∏–µ" */}
          {activeTab === 3 && (
            <Grid item xs={12}>
              <DevelopmentPlan 
                employee={employee}
              />
            </Grid>
          )}
          
          {/* –í–∫–ª–∞–¥–∫–∞ "–ë–æ–Ω—É—Å—ã" */}
          {activeTab === 4 && (
            <Grid item xs={12}>
              <PotentialBonuses 
                bonuses={metricsData.bonuses}
              />
            </Grid>
          )}
        </Grid>
      </LazyMotion>
    </Container>
  );
}

// –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
export default SalesEmployeeDashboard;