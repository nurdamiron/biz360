import { z as zod } from 'zod';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';

import { useState, useEffect } from 'react';
import { Box } from '@mui/material';
import Card from '@mui/material/Card';
import LoadingButton from '@mui/lab/LoadingButton';

import { useRouter } from 'src/routes/hooks';
import { Form } from 'src/components/hook-form';
import { toast } from 'src/components/snackbar';
import { useBoolean } from 'minimal-shared/hooks';

import { InvoiceNewEditAddress } from './invoice-new-edit-address';
import { InvoiceNewEditStatusDate } from './invoice-new-edit-status-date';
import { InvoiceNewEditDetails, defaultItem } from './invoice-new-edit-details';

import axiosInstance, { endpoints } from 'src/lib/axios';

// ----------------------------------------------------------------------
// –®–∞–≥ 1. –°—Ö–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Zod

// –ü—Ä–∏–º–µ—Ä: –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å –ø–æ —Å–∏—Ç—É–∞—Ü–∏–∏ (kp, act, nakladnaya)
const DocTypeEnum = zod.enum(['invoice', 'nakladnaya', 'schet_faktura', 'bank_transfer']);

const NewInvoiceSchema = zod.object({
  // –¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞
  document_type: DocTypeEnum.default('invoice'),
  // –°—Ç–∞—Ç—É—Å
  status: zod.string().default('draft'),
  // –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, "—Å—Ä–æ–∫ –æ–ø–ª–∞—Ç—ã")
  due_date: zod.date().nullable().optional(),
  // –ü–æ—Å—Ç–∞–≤—â–∏–∫
  billing_from: zod.number().optional().default(0),
  // –ö–ª–∏–µ–Ω—Ç
  billing_to: zod.preprocess(val => {
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —á–∏—Å–ª–æ, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –ø—É—Å—Ç–æ–µ
    if (val === '' || val === null || val === undefined) return undefined;
    return Number(val);
  }, zod.number({ required_error: 'Billing_to (ID –∫–ª–∏–µ–Ω—Ç–∞) –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è' })),

  // –ú–∞—Å—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤
  items: zod.array(
    zod.object({
      title: zod.string().min(1, '–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ'),
      service: zod.string().default(0),
      // –ö–æ–ª-–≤–æ
      quantity: zod
        .number({
          required_error: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ',
          invalid_type_error: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º',
        })
        .int('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º')
        .min(1, '–ú–∏–Ω–∏–º—É–º 1 –µ–¥–∏–Ω–∏—Ü–∞'), 
      // –¶–µ–Ω–∞
      unit_price: zod
        .number({
          required_error: '–¶–µ–Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞',
          invalid_type_error: '–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º',
        })
        .nonnegative('–¶–µ–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π'),
      total_price: zod.number().default(0),
    })
  ).min(1, '–ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –ø–æ–∑–∏—Ü–∏—é —Ç–æ–≤–∞—Ä–æ–≤'),

  // –ü–æ–ª—è –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞
  subtotal: zod.number().default(0),
  shipping: zod.number().default(0),
  discount: zod.number().default(0),
  tax: zod.number().default(0),
  total: zod.number().default(0),

  notes: zod.string().optional(),
});

// ----------------------------------------------------------------------
// –®–∞–≥ 2. –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç

export function InvoiceNewEditForm({ currentInvoice }) {
  const router = useRouter();
  const loadingSave = useBoolean(); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "Save as Draft"
  const loadingSend = useBoolean(); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "Create & Send"

  const [vatPerUnit, setVatPerUnit] = useState(0);


  // –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –Ω–æ–≤–æ–π —Ñ–æ—Ä–º—ã
  const defaultValues = {
    document_type: 'invoice',
    status: 'draft',
    due_date: null,
    billing_from: '',
    billing_to: '',
    items: [defaultItem], // —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Ç–æ–≤–∞—Ä–∞
    subtotal: 0,
    shipping: 0,
    discount: 0,
    tax: 0,
    total: 0,
    notes: '',
  };

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º React Hook Form
  const methods = useForm({
    mode: 'onChange',
    resolver: zodResolver(NewInvoiceSchema),
    defaultValues,
    // –ï—Å–ª–∏ –µ—Å—Ç—å "currentInvoice" (—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–π), –º–æ–∂–Ω–æ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å –≤ "values"
    values: currentInvoice
      ? {
          ...currentInvoice,
          due_date: currentInvoice.dueDate
            ? new Date(currentInvoice.dueDate)
            : null,
          billing_from: currentInvoice.billing_from || '',
          billing_to: currentInvoice.billing_to || '',
          items: currentInvoice.items?.map((item) => ({
            title: item.title || '',
            description: item.description || '',
            service: item.service || '',
            quantity: item.quantity || 1,
            unit_price: item.unit_price || 0,
            total_price: item.total_price || 0,
          })) || [defaultItem],
        }
      : undefined,
  });

  // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ–º —É–¥–æ–±—Å—Ç–≤–∞
  const {
    watch,
    setValue,
    handleSubmit,
    reset,
    formState: { isSubmitting },
  } = methods;

  // –°–ª–µ–¥–∏–º –∑–∞ items, shipping, discount, tax, —á—Ç–æ–±—ã –ø–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å subtotal / total
  const items = watch('items');
  const shipping = watch('shipping');
  const discount = watch('discount');
  const tax = watch('tax'); // –¢–µ–ø–µ—Ä—å UI –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è
  const subtotal = watch('subtotal');
  const total = watch('total');

  useEffect(() => {
    let calcSubtotal = 0;
    items.forEach((it) => {
      calcSubtotal += it.quantity * it.unit_price;
    });

    const calcTotal = calcSubtotal + Number(shipping) + Number(tax) - Number(discount);

    setValue('subtotal', calcSubtotal);
    setValue('total', calcTotal);
    setValue('tax', Number((calcSubtotal * 0.12).toFixed(2))); // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç –ù–î–°

    console.log('üîπ –û–±–Ω–æ–≤–ª–µ–Ω–æ:', { calcSubtotal, calcTotal, tax: (calcSubtotal * 0.12).toFixed(2) });
  }, [items, shipping, discount, setValue]);

  // –§—É–Ω–∫—Ü–∏—è "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫ —á–µ—Ä–Ω–æ–≤–∏–∫"
  const handleSaveAsDraft = handleSubmit(async (formData) => {
    loadingSave.onTrue();
    try {
      // –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
      if (currentInvoice?.id) {
        await axiosInstance.put(endpoints.invoice.update(currentInvoice.id), {
          ...formData,
          status: 'draft',
          items: formData.items.map((i) => ({
            ...i,
            total_price: i.quantity * i.unit_price,
          })),
        });
        toast.success('Draft updated successfully!');
      } else {
        // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π
        await axiosInstance.post(endpoints.invoice.create, {
          ...formData,
          status: 'draft',
          items: formData.items.map((i) => ({
            ...i,
            total_price: i.quantity * i.unit_price,
          })),
        });
        toast.success('Draft created successfully!');
      }

      reset();
      router.push('/dashboard/invoice'); // –ª–∏–±–æ paths.dashboard.invoice.root
    } catch (error) {
      console.error('handleSaveAsDraft error:', error);
      toast.error(error?.message || 'Failed to save draft');
    } finally {
      loadingSave.onFalse();
    }
  });

  // –§—É–Ω–∫—Ü–∏—è "–°–æ–∑–¥–∞—Ç—å –∏ –û—Ç–ø—Ä–∞–≤–∏—Ç—å"
  const handleCreateAndSend = handleSubmit(async (formData) => {
    loadingSend.onTrue();
    try {
      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º total_price –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
      const payload = {
        ...formData,
        status: 'pending',
        sent: 1, // –ø—Ä–∏–∑–Ω–∞–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏
        items: formData.items.map((i) => ({
          ...i,
          total_price: i.quantity * i.unit_price,
        })),
      };
  
      console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º payload:', payload);
  
      let response;
      if (currentInvoice?.id) {
        response = await axiosInstance.put(
          endpoints.invoice.update(currentInvoice.id),
          payload
        );
        console.log('–û—Ç–≤–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', response.data);
        toast.success('Invoice updated and sent!');
      } else {
        response = await axiosInstance.post(
          endpoints.invoice.create,
          payload
        );
        console.log('–û—Ç–≤–µ—Ç —Å–æ–∑–¥–∞–Ω–∏—è:', response.data);
        toast.success('Invoice created and sent!');
      }
  
      // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã –∏ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ø–∏—Å–æ–∫ —Å—á–µ—Ç–æ–≤
      reset();
      router.push('/dashboard/invoice');
    } catch (error) {
      console.error('handleCreateAndSend error:', error);
      // –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–≤–æ–¥–∏—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –µ—Å—Ç—å response.data.error
      const errorMessage =
        error?.response?.data?.error || error.message || 'Failed to create and send';
      toast.error(errorMessage);
    } finally {
      loadingSend.onFalse();
    }
  });
  


  return (
    <Form methods={methods}>
      <Card>
        <InvoiceNewEditAddress />
        <InvoiceNewEditStatusDate />
        <InvoiceNewEditDetails />
      </Card>

     <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end', gap: 2 }}>
        <LoadingButton
          color="inherit"
          variant="outlined"
          size="large"
          loading={loadingSave.value && isSubmitting}
          onClick={handleSaveAsDraft}
        >
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫ —á–µ—Ä–Ω–æ–≤–∏–∫
        </LoadingButton>

        <LoadingButton
          variant="contained"
          size="large"
          loading={loadingSend.value && isSubmitting}
          onClick={handleCreateAndSend}
        >
          {currentInvoice ? '–û–±–Ω–æ–≤–∏—Ç—å' : '–°–æ–∑–¥–∞—Ç—å'} & –û—Ç–ø—Ä–∞–≤–∏—Ç—å
        </LoadingButton>
      </Box>
    </Form>
  );
}