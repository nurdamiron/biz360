// src/sections/sales/components/lead-interaction/InteractionDetailsDialog.jsx
import { useState } from 'react';
import PropTypes from 'prop-types';
import {
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
  Box,
  Typography,
  Divider,
  Paper,
  Stack,
  Grid,
  Chip,
  Alert,
  Rating,
  alpha,
  useTheme
} from '@mui/material';

// –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –∏–∫–æ–Ω–æ–∫
const Icons = {
  Call: 'üìû',
  Email: 'üìß',
  Meeting: 'üìÖ',
  Message: 'üí¨',
  Robot: 'ü§ñ',
  Time: '‚è±Ô∏è',
  Star: '‚≠ê',
  Info: '‚ÑπÔ∏è',
  Check: '‚úì',
  Warning: '‚ö†Ô∏è',
  Success: '‚úÖ',
  Error: '‚ùå',
  Calendar: 'üìÖ',
  Phone: 'üì±',
  Mail: 'üì®',
  Person: 'üë§',
  Note: 'üìù',
  Play: '‚ñ∂Ô∏è',
};

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–∏–∞–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∏ –∞–Ω–∞–ª–∏–∑–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
 */
export default function InteractionDetailsDialog({ open, interaction, onClose }) {
  const theme = useTheme();
  const [loading, setLoading] = useState(false);
  
  // –ï—Å–ª–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ, –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–∏–∞–ª–æ–≥
  if (!interaction) {
    return null;
  }
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
  const getQualityColor = (score) => {
    if (score >= 80) return theme.palette.success.main;
    if (score >= 60) return theme.palette.warning.main;
    return theme.palette.error.main;
  };
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –æ—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
  const getQualityText = (score) => {
    if (score >= 80) return '–û—Ç–ª–∏—á–Ω–æ';
    if (score >= 60) return '–•–æ—Ä–æ—à–æ';
    if (score >= 40) return '–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ';
    return '–ù—É–∂–¥–∞–µ—Ç—Å—è –≤ —É–ª—É—á—à–µ–Ω–∏–∏';
  };
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∏–ª—è –¥–ª—è —Ç–∏–ø–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
  const getInteractionTypeStyle = (type) => {
    const styles = {
      '–ó–≤–æ–Ω–æ–∫': {
        icon: Icons.Call,
        color: theme.palette.primary.main,
        bgColor: alpha(theme.palette.primary.main, 0.1)
      },
      'Email': {
        icon: Icons.Email,
        color: theme.palette.info.main,
        bgColor: alpha(theme.palette.info.main, 0.1)
      },
      '–í—Å—Ç—Ä–µ—á–∞': {
        icon: Icons.Meeting,
        color: theme.palette.success.main,
        bgColor: alpha(theme.palette.success.main, 0.1)
      },
      '–°–æ–æ–±—â–µ–Ω–∏–µ': {
        icon: Icons.Message,
        color: theme.palette.warning.main,
        bgColor: alpha(theme.palette.warning.main, 0.1)
      }
    };
    
    return styles[type] || {
      icon: Icons.Message,
      color: theme.palette.grey[600],
      bgColor: alpha(theme.palette.grey[600], 0.1)
    };
  };
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
  const formatDate = (dateString) => {
    const date = new Date(dateString);
    return new Intl.DateTimeFormat('ru-RU', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    }).format(date);
  };
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∏–ø–∞ –∏ —Å—Ç–∏–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
  const typeStyle = getInteractionTypeStyle(interaction.type);
  const qualityColor = getQualityColor(interaction.quality_score || 0);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –∞–Ω–∞–ª–∏–∑–∞ –ò–ò
  const handleRequestAnalysis = () => {
    setLoading(true);
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ API –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    setTimeout(() => {
      setLoading(false);
      onClose(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø–æ—Å–ª–µ "–∑–∞–≤–µ—Ä—à–µ–Ω–∏—è" –∑–∞–ø—Ä–æ—Å–∞
      
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å API –∑–∞–ø—Ä–æ—Å
      // –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    }, 2000);
  };
  
  return (
    <Dialog
      open={open}
      onClose={onClose}
      maxWidth="md"
      fullWidth
      PaperProps={{
        sx: { borderRadius: 2 }
      }}
    >
      <DialogTitle>
        <Box sx={{ display: 'flex', alignItems: 'center' }}>
          <Box sx={{
            width: 40,
            height: 40,
            borderRadius: '50%',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            bgcolor: typeStyle.bgColor,
            color: typeStyle.color,
            fontSize: '1.25rem',
            mr: 1.5
          }}>
            {typeStyle.icon}
          </Box>
          <Typography variant="h6">
            {interaction.type} —Å –ª–∏–¥–æ–º #{interaction.lead_id}
          </Typography>
        </Box>
      </DialogTitle>
      
      <DialogContent dividers>
        <Grid container spacing={3}>
          {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ */}
          <Grid item xs={12} md={6}>
            <Paper 
              variant="outlined" 
              sx={{ 
                p: 2, 
                borderRadius: 2,
                borderColor: alpha(theme.palette.primary.main, 0.2),
                mb: { xs: 2, md: 0 }
              }}
            >
              <Typography variant="subtitle1" gutterBottom fontWeight="bold">
                –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏
              </Typography>
              <Divider sx={{ mb: 2 }} />
              
              <Stack spacing={1.5}>
                <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>
                  <Box sx={{ 
                    color: theme.palette.text.secondary,
                    fontSize: '1rem',
                    mt: 0.25,
                    mr: 1.5,
                    width: 20,
                    textAlign: 'center'
                  }}>
                    {Icons.Calendar}
                  </Box>
                  <Box>
                    <Typography variant="body2" color="text.secondary">
                      –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
                    </Typography>
                    <Typography variant="body1" fontWeight="medium">
                      {formatDate(interaction.date)}
                    </Typography>
                  </Box>
                </Box>
                
                <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>
                  <Box sx={{ 
                    color: theme.palette.text.secondary,
                    fontSize: '1rem',
                    mt: 0.25,
                    mr: 1.5,
                    width: 20,
                    textAlign: 'center'
                  }}>
                    {Icons.Time}
                  </Box>
                  <Box>
                    <Typography variant="body2" color="text.secondary">
                      –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
                    </Typography>
                    <Typography variant="body1" fontWeight="medium">
                      {interaction.duration} –º–∏–Ω—É—Ç
                    </Typography>
                  </Box>
                </Box>
                
                <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>
                  <Box sx={{ 
                    color: theme.palette.text.secondary,
                    fontSize: '1rem',
                    mt: 0.25,
                    mr: 1.5,
                    width: 20,
                    textAlign: 'center'
                  }}>
                    {Icons.Person}
                  </Box>
                  <Box>
                    <Typography variant="body2" color="text.secondary">
                      –°–æ—Ç—Ä—É–¥–Ω–∏–∫
                    </Typography>
                    <Typography variant="body1" fontWeight="medium">
                      ID: {interaction.created_by || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                    </Typography>
                  </Box>
                </Box>
                
                <Divider />
                
                <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>
                  <Box sx={{ 
                    color: theme.palette.text.secondary,
                    fontSize: '1rem',
                    mt: 0.25,
                    mr: 1.5,
                    width: 20,
                    textAlign: 'center'
                  }}>
                    {Icons.Check}
                  </Box>
                  <Box>
                    <Typography variant="body2" color="text.secondary">
                      –†–µ–∑—É–ª—å—Ç–∞—Ç
                    </Typography>
                    <Typography variant="body1" fontWeight="medium">
                      {interaction.result}
                    </Typography>
                  </Box>
                </Box>
                
                {interaction.notes && (
                  <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>
                    <Box sx={{ 
                      color: theme.palette.text.secondary,
                      fontSize: '1rem',
                      mt: 0.25,
                      mr: 1.5,
                      width: 20,
                      textAlign: 'center'
                    }}>
                      {Icons.Note}
                    </Box>
                    <Box>
                      <Typography variant="body2" color="text.secondary">
                        –ó–∞–º–µ—Ç–∫–∏
                      </Typography>
                      <Typography variant="body1">
                        {interaction.notes}
                      </Typography>
                    </Box>
                  </Box>
                )}
                
                <Divider />
                
                <Box>
                  <Typography variant="body2" color="text.secondary" gutterBottom>
                    –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞
                  </Typography>
                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 0.5 }}>
                    <Rating
                      value={Math.round(interaction.quality_score / 20)}
                      readOnly
                      size="small"
                      sx={{ mr: 1 }}
                    />
                    <Typography
                      variant="body2"
                      sx={{
                        color: qualityColor,
                        fontWeight: 'bold'
                      }}
                    >
                      {getQualityText(interaction.quality_score)}
                    </Typography>
                  </Box>
                  <Chip
                    label={`${interaction.quality_score}%`}
                    size="small"
                    sx={{
                      bgcolor: alpha(qualityColor, 0.1),
                      color: qualityColor,
                      fontWeight: 'bold'
                    }}
                  />
                </Box>
                
                {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∑–≤–æ–Ω–∫–æ–≤ */}
                {interaction.type === '–ó–≤–æ–Ω–æ–∫' && interaction.recording_url && (
                  <Box sx={{ mt: 1 }}>
                    <Button
                      variant="outlined"
                      startIcon={Icons.Play}
                      size="small"
                      fullWidth
                    >
                      –ü—Ä–æ—Å–ª—É—à–∞—Ç—å –∑–∞–ø–∏—Å—å
                    </Button>
                  </Box>
                )}
              </Stack>
            </Paper>
          </Grid>
          
          {/* –ê–Ω–∞–ª–∏–∑ –ò–ò */}
          <Grid item xs={12} md={6}>
            <Paper 
              variant="outlined" 
              sx={{ 
                p: 2, 
                borderRadius: 2,
                height: '100%',
                display: 'flex',
                flexDirection: 'column',
                borderColor: interaction.ai_feedback 
                  ? alpha(theme.palette.success.main, 0.2)
                  : alpha(theme.palette.warning.main, 0.2),
              }}
            >
              <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>
                <Box sx={{
                  width: 28,
                  height: 28,
                  borderRadius: '50%',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  bgcolor: alpha(theme.palette.info.main, 0.1),
                  color: theme.palette.info.main,
                  fontSize: '1rem',
                  mr: 1
                }}>
                  {Icons.Robot}
                </Box>
                <Typography variant="subtitle1" fontWeight="bold">
                  –ò–ò –∞–Ω–∞–ª–∏–∑ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
                </Typography>
              </Box>
              
              <Divider sx={{ mb: 2 }} />
              
              {interaction.ai_feedback ? (
                <Box sx={{ flex: 1 }}>
                  <Typography variant="body2" paragraph>
                    {interaction.ai_feedback}
                  </Typography>
                  
                  {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
                  <Typography variant="subtitle2" gutterBottom sx={{ mt: 2 }}>
                    –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é:
                  </Typography>
                  
                  <Stack spacing={1} sx={{ mb: 2 }}>
                    <Alert severity="info" sx={{ py: 0.5 }}>
                      –£–¥–µ–ª—è–π—Ç–µ –±–æ–ª—å—à–µ –≤–Ω–∏–º–∞–Ω–∏—è –≤—ã—è–≤–ª–µ–Ω–∏—é –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π –∫–ª–∏–µ–Ω—Ç–∞.
                    </Alert>
                    <Alert severity="success" sx={{ py: 0.5 }}>
                      –û—Ç–ª–∏—á–Ω–æ –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç–µ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ü–µ–Ω–µ.
                    </Alert>
                    <Alert severity="warning" sx={{ py: 0.5 }}>
                      –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–ª—É—á—à–∏—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ –ø—Ä–æ–¥—É–∫—Ç–∞.
                    </Alert>
                  </Stack>
                  
                  <Typography variant="body2" color="text.secondary" sx={{ mt: 'auto' }}>
                    –ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω: {formatDate(new Date().toISOString())}
                  </Typography>
                </Box>
              ) : (
                <Box 
                  sx={{ 
                    flex: 1, 
                    display: 'flex', 
                    flexDirection: 'column',
                    justifyContent: 'center',
                    alignItems: 'center',
                    textAlign: 'center',
                    py: 3
                  }}
                >
                  <Typography variant="body1" paragraph>
                    –î–ª—è —ç—Ç–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –µ—â–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω –ò–ò –∞–Ω–∞–ª–∏–∑
                  </Typography>
                  
                  <Typography variant="body2" color="text.secondary" paragraph>
                    –ò–ò –º–æ–∂–µ—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è, –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –∏ –ø–æ–º–æ—á—å –ø–æ–≤—ã—Å–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏.
                  </Typography>
                  
                  <Button
                    variant="contained"
                    onClick={handleRequestAnalysis}
                    disabled={loading}
                    sx={{ mt: 2 }}
                  >
                    {loading ? '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∞–Ω–∞–ª–∏–∑...' : '–ó–∞–ø—Ä–æ—Å–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –ò–ò'}
                  </Button>
                </Box>
              )}
            </Paper>
          </Grid>
        </Grid>
      </DialogContent>
      
      <DialogActions sx={{ p: 2 }}>
        <Button onClick={onClose} variant="outlined">
          –ó–∞–∫—Ä—ã—Ç—å
        </Button>
        <Button variant="contained" color="primary">
          –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
        </Button>
      </DialogActions>
    </Dialog>
  );
}

InteractionDetailsDialog.propTypes = {
  open: PropTypes.bool.isRequired,
  interaction: PropTypes.object,
  onClose: PropTypes.func.isRequired
};